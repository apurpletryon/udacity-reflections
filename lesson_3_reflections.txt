When would you want to use a remote repository rather than keeping all your work local?
  To back up your work, and to share it with others.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	You know better than when when youre changes are ready to be shared with the public. 


Describe the differences between forks, clones, and branches. When would you use one instead of another?
	Clone = copy a repository on your computer.
	Branch = separate features point back to original in commit tree.
	Fork = copy a repository on github without pulling it to your computer. Refers to original.

What is the benefit of having a copy of the last known state of the remote stored locally?
	This allows you to keep track of how different your changes are from the remote, so that when you push, pull, or merge, you won't be surprised by differences.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	We'd collaborate by sending files back and forth and exchanging emails. There wouldn't be a learning curve for git and github, but we wouldn't have a history of changes, and our work, especially on a complex project, would be confusing and less efficient.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	A separate branch allows you to try a different approach without losing your original work. You can continue to work on both in parallel. However, the branch system can make it more difficult to keep track of different changes, epsecially when you want to merge the branches.